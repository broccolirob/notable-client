# I've use alot of container_name flags here. Keep in mind if doing the swarm scale=3 thing, this will error out cause
# each needs a unique name.
# TODO: look into extended docker compose files for this and notable-api

version: '2.4'

services:
    traefik:
        image: traefik:v2.2
        container_name: notable-traefik
        command:
            - --entrypoints.web.address=:80
            - --providers.docker=true
            - --api.insecure
        ports:
            - '80:80'
            - '8080:8080'
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        labels:
            - 'traefik.http.routers.traefik.rule=Host(`traefik.localhost`)'
            - 'traefik.http.services.traefik.loadbalancer.server.port=8080'

    web:
        build:
            context: .
            target: dev
        container_name: notable-web
        ports:
            - '3000:3000'
        depends_on:
            - api
        volumes:
            - .:/node/app
            - /node/app/node_modules
        labels:
            - 'traefik.http.routers.web.rule=Host(`localhost`)'
            - 'traefik.http.services.web.loadbalancer.server.port=3000'

    api:
        image: notable-api:latest
        container_name: notable-api
        ports:
            - '5000:5000'
        environment:
            - JWT_SECRET=${JWT_SECRET}
            - SENDGRID_API_KEY=${SENDGRID_API_KEY}
            - FROM_EMAIL=${FROM_EMAIL}
            - DB_HOST=${DB_HOST}
        depends_on:
            - db
        labels:
            - 'traefik.http.routers.api.rule=Host(`api.localhost`)'
            - 'traefik.http.services.api.loadbalancer.server.port=5000'
            - 'traefik.http.routers.api.middlewares=corsheader'
            - 'traefik.http.middlewares.corsheader.headers.accesscontrolalloworiginlist=http://localhost'
            - 'traefik.http.middlewares.corsheader.headers.accesscontrolallowHeaders=*'

    db:
        image: mongo:4.2.5
        container_name: notable-db
        ports:
            - '27017:27017'
        volumes:
            - mongo-data:/data/db

# Docker compose throws on a prefix to named volumes. Since we're sharing this setup with notable-api this is no bueno.
# name flag means it will use that clean name for the volume. External flag means it already exists (throws error if not found).
volumes:
    mongo-data:
        external: true
        name: mongo-data
